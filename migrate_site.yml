---
- hosts: localhost
  tasks:
    - name: "Charger les variables de migration"
      include_vars: variables.yml
      always_run: yes
    - include: tasks/add_host.yml server={{ source }}
    - include: tasks/add_host.yml server={{ target }}
- hosts: "{{ hostvars.localhost.source.host }}"
  tasks:
    - debug: msg="Connexion au serveur cible {{ ansible_host }}"
    - apt: name=python-mysqldb update_cache=yes state=present
      become: true
    - name: "Activer le mode proxy"
      apache2_module: state=present name=proxy_http
- hosts: "{{ hostvars.localhost.target.host }}"
  tasks:
    - debug: msg="Connexion au serveur cible {{ ansible_host }}"
    - apt: name=python-mysqldb update_cache=yes state=present
      become: true
    - apt: name=sshpass update_cache=yes state=present
      become: true
    - include: tasks/rsync.yml
      vars:
        source:
          pass: "{{ hostvars.localhost.source.pass }}"
          port: "{{ hostvars.localhost.source.port }}"
          user: "{{ hostvars.localhost.source.user }}"
          host: "{{ hostvars.localhost.source.host }}"
          path: "{{ hostvars.localhost.source.path }}/"
        target:
          path: "{{ hostvars.localhost.target.path }}"
- hosts: "{{ hostvars.localhost.source.host }}"
  tasks:
    - name: Activer la maintenance sur le site {{ hostvars.localhost.source.domain }}
      copy: src=templates/maintenance.html dest={{ hostvars.localhost.source.path }}/maintenance.html
    - name: "Activation de la maintenance"
      blockinfile:
        dest: "{{ hostvars.localhost.source.path }}/.htaccess"
        block: |
          RewriteCond %{DOCUMENT_ROOT}/maintenance.html -f
          RewriteRule . maintenance.html [L]
        insertbefore: BOF
    - name: "Export de la base de donnée {{ hostvars.localhost.source.database.name }}"
      mysql_db: >
        login_user={{ hostvars.localhost.source.database.user }}
        login_password={{ hostvars.localhost.source.database.pass }}
        login_host={{ hostvars.localhost.source.database.host }}
        name={{ hostvars.localhost.source.database.name }}
        state=dump
        target=/tmp/{{ hostvars.localhost.source.database.name }}.sql
- hosts: "{{ hostvars.localhost.target.host }}"
  tasks:
    - include: tasks/rsync.yml
      vars:
        source:
          pass: "{{ hostvars.localhost.source.pass }}"
          port: "{{ hostvars.localhost.source.port }}"
          user: "{{ hostvars.localhost.source.user }}"
          host: "{{ hostvars.localhost.source.host }}"
          path: "/tmp/{{ hostvars.localhost.source.database.name }}.sql"
        target:
          path: "/tmp/{{ hostvars.localhost.source.database.name }}.sql"
    - mysql_db: >
        config_file=""
        login_user={{ hostvars.localhost.target.database.user }}
        login_password={{ hostvars.localhost.target.database.pass }}
        login_host={{ hostvars.localhost.target.database.host }}
        name={{ hostvars.localhost.target.database.name }}
        state=import
        target=/tmp/{{ hostvars.localhost.source.database.name }}.sql
    - name: Importer les données manquante depuis la source
      include: tasks/rsync.yml
      vars:
        source:
          pass: "{{ hostvars.localhost.source.pass }}"
          port: "{{ hostvars.localhost.source.port }}"
          user: "{{ hostvars.localhost.source.user }}"
          host: "{{ hostvars.localhost.source.host }}"
          path: "{{ hostvars.localhost.source.path }}/"
        target:
          path: "{{ hostvars.localhost.target.path }}"
    - name: Corriger tous les appels aux anciens chemin avec le nouveau
      command: find . -type f -exec sed -i 's#{{ hostvars.localhost.source.path }}/#{{ hostvars.localhost.target.path }}/#g' {} +
      args:
        chdir: "{{ hostvars.localhost.target.path }}/"
    - name: Corriger la connexion a la db
      include: "{{ item }}"
      vars:
        path: "{{ hostvars.localhost.target.path }}"
        database: "{{ hostvars.localhost.target.database }}"
      with_first_found:
        - files:
            - tasks/{{ hostvars.localhost.source.cms }}_db.yml
          skip: true
    - name: Corriger les droits sur le repertoire
      command: /usr/lib/alternc/fixperms.sh
- hosts: "{{ hostvars.localhost.source.host }}"
  tasks:
    - name: "Activation du mode proxy"
      template: src=templates/proxy.j2 dest=/etc/apache2/conf.d/000-proxy-{{ hostvars.localhost.source.domain }}.conf
    - name: "Relancer apache"
      service: name=apache2 state=reloaded